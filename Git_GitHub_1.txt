git - 분산형 버전 관리 시스템
github - 공유 시스템

TIL today i learned
markup 구조를 잡는..
markdown

markdwon cheat sheet
테크니컬 라이팅
devrel

윈도우 gui
cli command line interface

ls = list
목록

touch 2.txt
2.txt 만들기

rm 2.txt
2.txt 삭제

mkdir 2
2 폴더 만들기

cd 2
2 폴더 가기

cd ..
상위 폴더 가기

버전 - 컴퓨터 소프트웨어의 특정 상태

git init  - 메인 폴더 설정
git add index.html
git commit -m 'Add Index.html'
계정 설정
git config --global user.email "~~~@~~~"
git config --global user.name "~~"

git log 버전 확인
git status 변경점 확인
add 하면 staging에 commit 하면 repository에
staging area 실적용 전 테스트를 위한 서버, 중간 임시

git은 파일시스템의 스냅샨으로 관리하기 때문에 크기가 작음
파일이 다라라지지 않으면 성능을 위해 저장하지 않음

untracked files 기록된적 없는 파일
changes not staged for commit 커밋이 된적 있고 변경, add 안함
changes to be commited add되어 커밋될 예쩡

git remote add origin https://github.com/KGB6753/django01.git
git push origin main


git pull 원격저장소이름, 브랜치 이름


# 실습: TIL
1. 바탕화면에 TIL 폴더를 만들고
2. 정리했던 마크다운 파일을 옮기고
3. 저장소 설정하고 git init
4. 커밋을 하고 add, commit
5. github에 들어가서 원격저장소를 til이름으로 만들고
6. 원격 저장소 설정을 하고 git remote add origin
7. push
8. 시트에 들어와서 주소를 기입한다.

## 이후로
옵션
1. 오늘 배운 내용을 정리하고 커밋 푸시
2. Django 등 이제까지 배웠던 내용들 정리해서 커밋 푸시
3. Django 프로젝트를 새로 열어서 게시판 만들면서 자연스럽게 버전 기록
